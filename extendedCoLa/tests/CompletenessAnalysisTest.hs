module Test.CompletenessAnalysisTest where

import Test.QuickCheck
import Data.Map ( fromList )
import qualified Main as CoLaParser
import Parser.AbsCoLa 
import Helper.ExampleContracts
import ContractAnalysis.CompletenessAnalysis

prop_completenessReport :: String -> CompletenessReport -> Property
prop_completenessReport input expectedCompletenessReport =
    runCheckCompleteness (CoLaParser.parseContract input) === expectedCompletenessReport

prop_completenessReportFinal :: String -> String -> Property
prop_completenessReportFinal input expectedFinalCompletenessReport =
    runCheckCompleteness (CoLaParser.parseContract input) === expectedFinalCompletenessReport

emptyContractCompletenessReport = IncompleteItems ([],[],[],[],fromList [])
simpleDefinitionCompletenessReport = IncompleteItems ([],[],[],[],fromList [])
andDefinitionCompletenessReport = IncompleteItems ([],[],[],[],fromList [])
conditionalDefinitionCompletenessReport = IncompleteItems ([SimConFour (IDSim (NumInt 1)) HoldYes (SubUnQuoted (Ident "Kelly")) (ModalObli ObliTwo) VCharge (ObjNu (NumAmount (SubUnQuoted (Ident "rental")))) (Rec (SubUnQuoted (Ident "Carol"))) (DateQuanSpecific TempBefore (NumInt 1) MJan (NumInt 2024))],[SimDefIs (IDSim (NumInt 2)) (SubUnQuoted (Ident "PartyA")) (SubUnQuoted (Ident "Carol"))],[],[],fromList [])
simpleStatementCompletenessReport = IncompleteItems ([],[],[],[],fromList [])
andStatementCompletenessReport = IncompleteItems ([],[],[],[],fromList [])
orStatementCompletenessReport = IncompleteItems ([],[],[],[],fromList [])
conditionalStatementCompletenessReport = IncompleteItems ([],[],[],[],fromList [])

completenessContractCompletenessReport1 = IncompleteItems ([SimConOne (IDSim (NumInt 1)) HoldYes (SubUnQuoted (Ident "Alice")) VSPay (ObjNu (NumPound PoundTwo (NumInt 10))) (Rec (SubUnQuoted (Ident "Bob"))) (DateSpe (DateSpeOn (NumInt 12) MFeb (NumInt 2024)))],[SimDefIs (IDSim (NumInt 2)) (SubUnQuoted (Ident "PartyA")) (SubUnQuoted (Ident "Alice"))],[],[],fromList [])
completenessContractCompletenessReport2 = IncompleteItems ([],[],[SimConOneNH (IDSim (NumInt 1)) (SubUnQuoted (Ident "Rachel")) VSCharge (ObjNu (NumPound PoundTwo (NumInt 72))) (Rec (SubUnQuoted (Ident "Elsa"))) (DateSome (SubUnQuoted (Ident "unknown")))],[SimStateOneNH (IDSim (NumInt 2)) (SubUnQuoted (Ident "Rachel")) (ModalObli ObliTwo) VDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "earphone")))) (Rec (SubUnQuoted (Ident "Elsa"))) (DateQuanTempThe TempBefore (TempOffDays (NumInt 3)) TempAfter (SubUnQuoted (Ident "unknown")))],fromList [])
completenessContractCompletenessReport3 = IncompleteItems ([],[],[],[],fromList [])
completenessContractCompletenessReport4 = IncompleteItems ([],[],[],[],fromList [("it is the case that Neo paid Kathy",[("more than","[1]")])])
completenessContractCompletenessReport5 = IncompleteItems ([],[],[],[],fromList [("it is the case that Cindy paid George",[("more than","[1]"),("less than","[4]"),("equal to","[5]")])])

bikeDeliveryOriginalCompletenessReport = IncompleteItems ([],[],[SimConOne (IDSim (NumInt 1)) HoldYes (SubUnQuoted (Ident "Alice")) VSPay (ObjNu (NumPound PoundTwo (NumInt 100))) (Rec (SubUnQuoted (Ident "Bob"))) (DateSpe (DateSpeOnThe (NumInt 1) MApr (NumInt 2021))),SimConOne (IDSim (NumInt 2)) HoldYes (SubUnQuoted (Ident "Alice")) VSPay (ObjNu (NumDol DollarTwo (NumInt 120))) (Rec (SubUnQuoted (Ident "Bob"))) (DateSpe (DateSpeOnThe (NumInt 1) MApr (NumInt 2021)))],[SimStateOne (IDSim (NumInt 3)) HoldYes (SubUnQuoted (Ident "Bob")) (ModalObli ObliTwo) VDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "bicycle")))) (Rec (SubUnQuoted (Ident "Alice"))) (DateSpe (DateSpeOnThe (NumInt 5) MApr (NumInt 2021)))],fromList [])
bikeDeliveryModifiedCompletenessReport = IncompleteItems ([],[],[SimConOne (IDSim (NumInt 1)) HoldYes (SubUnQuoted (Ident "Alice")) VSPay (ObjNu (NumPound PoundTwo (NumInt 100))) (Rec (SubUnQuoted (Ident "Bob"))) (DateSpe (DateSpeOnThe (NumInt 1) MApr (NumInt 2021))),SimConOne (IDSim (NumInt 2)) HoldYes (SubUnQuoted (Ident "Alice")) VSPay (ObjNu (NumDol DollarTwo (NumInt 120))) (Rec (SubUnQuoted (Ident "Bob"))) (DateSpe (DateSpeOnThe (NumInt 1) MApr (NumInt 2021)))],[SimStateOne (IDSim (NumInt 3)) HoldYes (SubUnQuoted (Ident "Bob")) (ModalObli ObliTwo) VDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "bicycle")))) (Rec (SubUnQuoted (Ident "Alice"))) (DateSpe (DateSpeOnThe (NumInt 5) MApr (NumInt 2021))),SimStateOne (IDSim (NumInt 4)) HoldYes (SubUnQuoted (Ident "Bob")) ModalPermi VDel (ObjNonNu (NonNumRep (SubUnQuoted (Ident "receipt")))) (Rec (SubUnQuoted (Ident "Alice"))) DateAny,SimStateOne (IDSim (NumInt 5)) HoldYes (SubUnQuoted (Ident "Bob")) ModalForbi VCharge (ObjNu (NumAmount (SubQuoted "delivery fee"))) (Rec (SubUnQuoted (Ident "Alice"))) DateAny],fromList [])
bikeDeliverySanctionCompletenessReport = IncompleteItems ([],[],[SimConOne (IDSim (NumInt 1)) HoldYes (SubUnQuoted (Ident "Alice")) VSPay (ObjNu (NumPound PoundTwo (NumInt 100))) (Rec (SubUnQuoted (Ident "Bob"))) (DateSpe (DateSpeOnThe (NumInt 1) MApr (NumInt 2021))),SimConOne (IDSim (NumInt 2)) HoldYes (SubUnQuoted (Ident "Alice")) VSPay (ObjNu (NumDol DollarTwo (NumInt 120))) (Rec (SubUnQuoted (Ident "Bob"))) (DateSpe (DateSpeOnThe (NumInt 1) MApr (NumInt 2021))),SimConOne (IDSim (NumInt 5)) HoldYes (SubUnQuoted (Ident "Bob")) VSDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "bicycle")))) (Rec (SubUnQuoted (Ident "Alice"))) (DateSpe (DateSpeOnThe (NumInt 5) MApr (NumInt 2021))),SimConOne (IDSim (NumInt 6)) HoldNo (SubUnQuoted (Ident "Bob")) VSCharge (ObjNu (NumAmount (SubQuoted "delivery fee"))) (Rec (SubUnQuoted (Ident "Alice"))) DateAny,SimConOne (IDSim (NumInt 9)) HoldNo (SubUnQuoted (Ident "Bob")) VSDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "bicycle")))) (Rec (SubUnQuoted (Ident "Alice"))) (DateSpe (DateSpeOnThe (NumInt 5) MApr (NumInt 2021)))],[SimStateOne (IDSim (NumInt 3)) HoldYes (SubUnQuoted (Ident "Bob")) (ModalObli ObliTwo) VDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "bicycle")))) (Rec (SubUnQuoted (Ident "Alice"))) (DateSpe (DateSpeOnThe (NumInt 5) MApr (NumInt 2021))),SimStateOne (IDSim (NumInt 4)) HoldYes (SubUnQuoted (Ident "Bob")) ModalForbi VCharge (ObjNu (NumAmount (SubQuoted "delivery fee"))) (Rec (SubUnQuoted (Ident "Alice"))) DateAny,SimStateOne (IDSim (NumInt 7)) HoldYes (SubUnQuoted (Ident "Bob")) ModalPermi VDel (ObjNonNu (NonNumRep (SubUnQuoted (Ident "receipt")))) (Rec (SubUnQuoted (Ident "Alice"))) DateAny,SimStateOne (IDSim (NumInt 8)) HoldYes (SubUnQuoted (Ident "Alice")) ModalPermi VCharge (ObjNu (NumPound PoundTwo (NumInt 100))) (Rec (SubUnQuoted (Ident "Bob"))) (DateSpe (DateSpeOn (NumInt 8) MApr (NumInt 2021)))],fromList [])
isdaOriginalCompletenessReport = IncompleteItems ([SimConFive (IDSim (NumInt 6)) HoldYes (BoolEx (SubUnQuoted (Ident "PartyA")) VSPay (CompareMore MoreOne) (SubUnQuoted (Ident "PartyB"))),SimConFive (IDSim (NumInt 9)) HoldYes (BoolEx (SubUnQuoted (Ident "PartyB")) VSPay (CompareMore MoreOne) (SubUnQuoted (Ident "PartyA")))],[SimDefIs (IDSim (NumInt 7)) (SubUnQuoted (Ident "ExcessParty")) (SubUnQuoted (Ident "PartyA")),SimDefEq (IDSim (NumInt 8)) (SubUnQuoted (Ident "ExcessAmount")) (NumExpOp (NumExpObj (NumAmount (SubUnQuoted (Ident "AmountA")))) OpMin (NumExpObj (NumAmount (SubUnQuoted (Ident "AmountB"))))),SimDefIs (IDSim (NumInt 10)) (SubUnQuoted (Ident "ExcessParty")) (SubUnQuoted (Ident "PartyB")),SimDefEq (IDSim (NumInt 11)) (SubUnQuoted (Ident "ExcessAmount")) (NumExpOp (NumExpObj (NumAmount (SubUnQuoted (Ident "AmountB")))) OpMin (NumExpObj (NumAmount (SubUnQuoted (Ident "AmountA")))))],[SimConFour (IDSim (NumInt 1)) HoldYes (SubUnQuoted (Ident "PartyA")) (ModalObli ObliOne) VPay (ObjNu (NumAmount (SubUnQuoted (Ident "AmountA")))) (Rec (SubUnQuoted (Ident "PartyB"))) (DateSome (SubUnQuoted (Ident "unknownOne"))),SimConFour (IDSim (NumInt 2)) HoldYes (SubUnQuoted (Ident "PartyB")) (ModalObli ObliOne) VPay (ObjNu (NumAmount (SubUnQuoted (Ident "AmountB")))) (Rec (SubUnQuoted (Ident "PartyA"))) (DateThe (SubUnQuoted (Ident "unknownOne")))],[SimStateOne (IDSim (NumInt 3)) HoldNo (SubUnQuoted (Ident "PartyA")) (ModalObli ObliOne) VPay (ObjNu (NumAmount (SubUnQuoted (Ident "AmountA")))) (Rec (SubUnQuoted (Ident "PartyB"))) (DateThe (SubUnQuoted (Ident "unknownOne"))),SimStateOne (IDSim (NumInt 4)) HoldNo (SubUnQuoted (Ident "PartyB")) (ModalObli ObliOne) VPay (ObjNu (NumAmount (SubUnQuoted (Ident "AmountB")))) (Rec (SubUnQuoted (Ident "PartyA"))) (DateThe (SubUnQuoted (Ident "unknownOne")))],fromList [("it is the case that PartyA paid PartyB",[("more than","[6]")]),("it is the case that PartyB paid PartyA",[("more than","[9]")])])
isdaModifiedCompletenessReport = IncompleteItems ([SimConFive (IDSim (NumInt 6)) HoldYes (BoolEx (SubUnQuoted (Ident "PartyA")) VSPay (CompareMore MoreOne) (SubUnQuoted (Ident "PartyB"))),SimConFive (IDSim (NumInt 9)) HoldYes (BoolEx (SubUnQuoted (Ident "PartyB")) VSPay (CompareMore MoreOne) (SubUnQuoted (Ident "PartyA")))],[SimDefIs (IDSim (NumInt 7)) (SubUnQuoted (Ident "ExcessParty")) (SubUnQuoted (Ident "PartyA")),SimDefEq (IDSim (NumInt 8)) (SubUnQuoted (Ident "ExcessAmount")) (NumExpOp (NumExpObj (NumAmount (SubUnQuoted (Ident "AmountA")))) OpMin (NumExpObj (NumAmount (SubUnQuoted (Ident "AmountB"))))),SimDefIs (IDSim (NumInt 10)) (SubUnQuoted (Ident "ExcessParty")) (SubUnQuoted (Ident "PartyA")),SimDefEq (IDSim (NumInt 11)) (SubUnQuoted (Ident "ExcessAmount")) (NumExpOp (NumExpObj (NumAmount (SubUnQuoted (Ident "AmountB")))) OpMin (NumExpObj (NumAmount (SubUnQuoted (Ident "AmountA")))))],[SimConFour (IDSim (NumInt 1)) HoldYes (SubUnQuoted (Ident "PartyA")) (ModalObli ObliOne) VPay (ObjNu (NumAmount (SubUnQuoted (Ident "AmountA")))) (Rec (SubUnQuoted (Ident "PartyB"))) (DateSpe (DateSpeOnThe (NumInt 1) MJan (NumInt 1970))),SimConFour (IDSim (NumInt 2)) HoldYes (SubUnQuoted (Ident "PartyB")) (ModalObli ObliOne) VPay (ObjNu (NumAmount (SubUnQuoted (Ident "AmountB")))) (Rec (SubUnQuoted (Ident "PartyA"))) (DateSpe (DateSpeOnThe (NumInt 1) MJan (NumInt 1970)))],[SimStateOne (IDSim (NumInt 3)) HoldNo (SubUnQuoted (Ident "PartyA")) (ModalObli ObliOne) VPay (ObjNu (NumAmount (SubUnQuoted (Ident "AmountA")))) (Rec (SubUnQuoted (Ident "PartyB"))) (DateSpe (DateSpeOnThe (NumInt 1) MJan (NumInt 1970))),SimStateOne (IDSim (NumInt 4)) HoldNo (SubUnQuoted (Ident "PartyB")) (ModalObli ObliOne) VPay (ObjNu (NumAmount (SubUnQuoted (Ident "AmountB")))) (Rec (SubUnQuoted (Ident "PartyA"))) (DateSpe (DateSpeOnThe (NumInt 1) MJan (NumInt 1970))),SimStateOne (IDSim (NumInt 5)) HoldYes (SubUnQuoted (Ident "Excessparty")) (ModalObli ObliOne) VPay (ObjNu (NumAmount (SubUnQuoted (Ident "ExcessAmount")))) (Rec (SubUnQuoted (Ident "AnotherParty"))) (DateThe (SubUnQuoted (Ident "unknownOne")))],fromList [("it is the case that PartyA paid PartyB",[("more than","[6]")]),("it is the case that PartyB paid PartyA",[("more than","[9]")])])
guarantorCompletenessReport = IncompleteItems ([],[],[SimConOne (IDSim (NumInt 2)) HoldYes (SubUnQuoted (Ident "Landlord")) VSDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "demandOfTenantPayment")))) (Rec (SubUnQuoted (Ident "Tenant"))) (DateSpe (DateSpeOnThe (NumInt 2) MApr (NumInt 2023))),SimConOne (IDSim (NumInt 3)) HoldNo (SubUnQuoted (Ident "Tenant")) VSPay (ObjNu (NumAmount (SubUnQuoted (Ident "AmountA")))) (Rec (SubUnQuoted (Ident "Landlord"))) (DateQuanSpecific TempBefore (NumInt 5) MApr (NumInt 2023)),SimConOne (IDSim (NumInt 5)) HoldYes (SubUnQuoted (Ident "Landlord")) VSDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "demandOfTenantPayment")))) (Rec (SubUnQuoted (Ident "Tenant"))) (DateSpe (DateSpeOnThe (NumInt 2) MApr (NumInt 2023))),SimConOne (IDSim (NumInt 6)) HoldNo (SubUnQuoted (Ident "Tenant")) VSPay (ObjNu (NumAmount (SubUnQuoted (Ident "AmountA")))) (Rec (SubUnQuoted (Ident "Landlord"))) (DateQuanSpecific TempBefore (NumInt 10) MApr (NumInt 2023)),SimConOne (IDSim (NumInt 7)) HoldYes (SubUnQuoted (Ident "Landlord")) VSDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "demandOfGuarantorPayment")))) (Rec (SubUnQuoted (Ident "Tenant"))) (DateSpe (DateSpeOnThe (NumInt 6) MApr (NumInt 2023))),SimConOne (IDSim (NumInt 9)) HoldNo (SubUnQuoted (Ident "Tenant")) VSPay (ObjNu (NumAmount (SubUnQuoted (Ident "AmountB")))) (Rec (SubUnQuoted (Ident "Landlord"))) (DateQuanSpecific TempBefore (NumInt 11) MSep (NumInt 2023)),SimConOne (IDSim (NumInt 11)) HoldYes (SubUnQuoted (Ident "HousingBenefitScheme")) VSPay (ObjNu (NumAmount (SubUnQuoted (Ident "AmountC")))) (Rec (SubUnQuoted (Ident "Tenant"))) (DateSpe (DateSpeOnThe (NumInt 1) MJan (NumInt 2024))),SimConOne (IDSim (NumInt 12)) HoldYes (SubUnQuoted (Ident "LocalAuthority")) VSDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "overpaymentClaim")))) (Rec (SubUnQuoted (Ident "Tenant"))) (DateSpe (DateSpeOnThe (NumInt 7) MJan (NumInt 2024)))],[SimStateOne (IDSim (NumInt 4)) HoldYes (SubUnQuoted (Ident "Landlord")) ModalPermi VDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "demandOfGuarantorPayment")))) (Rec (SubUnQuoted (Ident "Tenant"))) (DateSpe (DateSpeOnThe (NumInt 6) MApr (NumInt 2023))),SimStateOne (IDSim (NumInt 8)) HoldYes (SubUnQuoted (Ident "Guarantor")) (ModalObli ObliTwo) VPay (ObjNu (NumAmount (SubUnQuoted (Ident "AmountA")))) (Rec (SubUnQuoted (Ident "Landlord"))) (DateSpe (DateSpeOnThe (NumInt 11) MApr (NumInt 2023))),SimStateOne (IDSim (NumInt 10)) HoldYes (SubUnQuoted (Ident "Guarantor")) (ModalObli ObliTwo) VPay (ObjNu (NumAmount (SubUnQuoted (Ident "AmountB")))) (Rec (SubUnQuoted (Ident "Landlord"))) (DateSpe (DateSpeOnThe (NumInt 12) MSep (NumInt 2023))),SimStateOne (IDSim (NumInt 13)) HoldYes (SubUnQuoted (Ident "Guarantor")) (ModalObli ObliTwo) VPay (ObjNu (NumAmount (SubUnQuoted (Ident "AmountC")))) (Rec (SubUnQuoted (Ident "Landlord"))) (DateQuanSpecific TempBefore (NumInt 10) MJan (NumInt 2024))],fromList [])
employmentCompletenessReport = IncompleteItems ([],[],[SimConOneNH (IDSim (NumInt 2)) (SubUnQuoted (Ident "Employee")) VSDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "responsibilities")))) (Rec (SubUnQuoted (Ident "Employer"))) (DateQuanSpecific TempBefore (NumInt 25) MMar (NumInt 2024)),SimConOneNH (IDSim (NumInt 3)) (SubUnQuoted (Ident "Employee")) VSDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "absenceWithoutPriorNotice")))) (Rec (SubUnQuoted (Ident "Employer"))) (DateSome (SubUnQuoted (Ident "unknownOne"))),SimConOneNH (IDSim (NumInt 7)) (SubUnQuoted (Ident "Employee")) VSDel (ObjNonNu (NonNumRep (SubUnQuoted (Ident "requestForReimbursement")))) (Rec (SubUnQuoted (Ident "Employer"))) (DateThe (SubUnQuoted (Ident "unknownTwo"))),SimConOneNH (IDSim (NumInt 8)) (SubUnQuoted (Ident "Employee")) VSDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "extraHoursOfWork")))) (Rec (SubUnQuoted (Ident "Employer"))) (DateSome (SubUnQuoted (Ident "unknownThree"))),SimConOneNH (IDSim (NumInt 12)) (SubUnQuoted (Ident "Employee")) VSDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "targetOutperformance")))) (Rec (SubUnQuoted (Ident "Employer"))) (DateSome (SubUnQuoted (Ident "unknownFour")))],[SimStateOne (IDSim (NumInt 1)) HoldYes (SubUnQuoted (Ident "Employer")) (ModalObli ObliTwo) VPay (ObjNu (NumPound PoundTwo (NumInt 2500))) (Rec (SubUnQuoted (Ident "Employee"))) (DateSpe (DateSpeOn (NumInt 25) MMar (NumInt 2024))),SimStateOneNH (IDSim (NumInt 4)) (SubUnQuoted (Ident "Employee")) (ModalObli ObliTwo) VDel (ObjNonNu (NonNumRep (SubUnQuoted (Ident "absenceReason")))) (Rec (SubUnQuoted (Ident "Employer"))) (DateQuanTempThe TempBefore (TempOffDays (NumInt 3)) TempAfter (SubUnQuoted (Ident "unknownOne"))),SimStateOneNH (IDSim (NumInt 5)) (SubUnQuoted (Ident "Employer")) ModalPermi VCharge (ObjNu (NumPound PoundTwo (NumInt 100))) (Rec (SubUnQuoted (Ident "Employee"))) (DateQuanTheWO (TempOffWeeks (NumInt 4)) TempAfter (SubUnQuoted (Ident "unknownOne"))),SimStateOneNH (IDSim (NumInt 6)) (SubUnQuoted (Ident "Employee")) (ModalObli ObliTwo) VDel (ObjNonNu (NonNumRep (SubUnQuoted (Ident "approvalRequest")))) (Rec (SubUnQuoted (Ident "Employer"))) (DateQuanTempSome TempBefore (TempOffWeeks (NumInt 2)) TempAfter (SubUnQuoted (Ident "unknownTwo"))),SimStateOneNH (IDSim (NumInt 9)) (SubUnQuoted (Ident "Employer")) (ModalObli ObliTwo) VPay (ObjNu (NumAmount (SubUnQuoted (Ident "overtimePayment")))) (Rec (SubUnQuoted (Ident "Employee"))) (DateQuanTempThe TempBefore (TempOffWeeks (NumInt 4)) TempAfter (SubUnQuoted (Ident "unknownThree"))),SimStateOneNH (IDSim (NumInt 13)) (SubUnQuoted (Ident "Employer")) (ModalObli ObliTwo) VPay (ObjNu (NumAmount (SubUnQuoted (Ident "bonus")))) (Rec (SubUnQuoted (Ident "Employee"))) (DateQuanSomeWO (TempOffYear (NumInt 1)) TempAfter (SubUnQuoted (Ident "unknownFour")))],fromList [])
tenancyCompletenessReport = IncompleteItems ([],[],[SimConOne (IDSim (NumInt 2)) HoldYes (SubUnQuoted (Ident "Tenant")) VSPay (ObjNu (NumPound PoundTwo (NumInt 15000))) (Rec (SubUnQuoted (Ident "Landlord"))) (DateQuanSpecific TempBefore (NumInt 1) MSep (NumInt 2023)),SimConOne (IDSim (NumInt 6)) HoldYes (SubUnQuoted (Ident "Tenant")) VSDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "notDamagedProperty")))) (Rec (SubUnQuoted (Ident "Landlord"))) (DateSpe (DateSpeOnThe (NumInt 22) MSep (NumInt 2024))),SimConOne (IDSim (NumInt 7)) HoldYes (SubUnQuoted (Ident "Landlord")) VSCharge (ObjNu (NumAmount (SubUnQuoted (Ident "securityDeposit")))) (Rec (SubUnQuoted (Ident "Tenant"))) (DateSpe (DateSpeOn (NumInt 23) MAug (NumInt 2023))),SimConOne (IDSim (NumInt 9)) HoldYes (SubUnQuoted (Ident "Landlord")) VSCharge (ObjNu (NumAmount (SubUnQuoted (Ident "incrementInRental")))) (Rec (SubUnQuoted (Ident "Tenant"))) (DateSome (SubUnQuoted (Ident "unknown")))],[SimStateOne (IDSim (NumInt 1)) HoldYes (SubUnQuoted (Ident "Landlord")) (ModalObli ObliTwo) VDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "property")))) (Rec (SubUnQuoted (Ident "Tenant"))) (DateSpe (DateSpeOnThe (NumInt 23) MSep (NumInt 2023))),SimStateOne (IDSim (NumInt 8)) HoldYes (SubUnQuoted (Ident "Landlord")) (ModalObli ObliTwo) VRefund (ObjNu (NumAmount (SubUnQuoted (Ident "securityDeposit")))) (Rec (SubUnQuoted (Ident "Tenant"))) (DateQuanSpecific TempBefore (NumInt 1) MOct (NumInt 2024)),SimStateOne (IDSim (NumInt 10)) HoldYes (SubUnQuoted (Ident "Landlord")) (ModalObli ObliTwo) VDel (ObjNonNu (NonNumRep (SubUnQuoted (Ident "noticeOfRentalIncrement")))) (Rec (SubUnQuoted (Ident "Tenant"))) (DateQuanTheWO (TempOffWeeks (NumInt 4)) TempBefore (SubUnQuoted (Ident "unknown")))],fromList [])
serviceLevelAgreementCompletenessReport = IncompleteItems ([],[],[SimConOneNH (IDSim (NumInt 3)) (SubUnQuoted (Ident "ServiceProvider")) VSDel (ObjNonNu (NonNumOther (SubUnQuoted (Ident "agreedService")))) (Rec (SubUnQuoted (Ident "Client"))) (DateQuanSpecific TempAfter (NumInt 10) MFeb (NumInt 2024)),SimConOne (IDSim (NumInt 6)) HoldNo (SubUnQuoted (Ident "Client")) VSPay (ObjNu (NumPound PoundTwo (NumInt 100))) (Rec (SubUnQuoted (Ident "ServiceProvider"))) (DateQuanSpecific TempBefore (NumInt 10) MApr (NumInt 2024))],[SimStateOneNH (IDSim (NumInt 4)) (SubUnQuoted (Ident "ServiceProvider")) (ModalObli ObliTwo) VRefund (ObjNu (NumPound PoundTwo (NumInt 10))) (Rec (SubUnQuoted (Ident "Client"))) (DateQuanSpecific TempBefore (NumInt 17) MFeb (NumInt 2024)),SimStateOne (IDSim (NumInt 7)) HoldYes (SubUnQuoted (Ident "ServiceProvider")) ModalPermi VDel (ObjNonNu (NonNumRep (SubUnQuoted (Ident "terminationOfAgreement")))) (Rec (SubUnQuoted (Ident "Client"))) (DateQuanSpecific TempAfter (NumInt 10) MApr (NumInt 2024))],fromList [])

completenessContractFinalCompletenessReport1 = 
completenessContractFinalCompletenessReport2 = 
completenessContractFinalCompletenessReport3 = 
completenessContractFinalCompletenessReport4 = 
completenessContractFinalCompletenessReport5 = 

bikeDeliveryOriginalFinalCompletenessReport = 
bikeDeliveryModifiedFinalCompletenessReport = 
bikeDeliverySanctionFinalCompletenessReport = 
isdaOriginalFinalCompletenessReport = 
isdaModifiedFinalCompletenessReport = 
guarantorFinalCompletenessReport = 
employmentFinalCompletenessReport = 
tenancyFinalCompletenessReport = 
serviceLevelAgreementFinalCompletenessReport = 

completenessReportSampleTests :: [(String, CompletenessReport)]
completenessReportSampleTests = 
    [(emptyContract, emptyContractCompletenessReport)
    , (simpleDefinition1, simpleDefinitionCompletenessReport)
    , (andDefinition4, andDefinitionCompletenessReport)
    , (conditionalDefinition8, conditionalDefinitionCompletenessReport)
    , (simpleStatement3, simpleStatementCompletenessReport)
    , (andStatement3, andStatementCompletenessReport)
    , (orStatement1, orStatementCompletenessReport)
    , (conditionalStatement8, conditionalStatementCompletenessReport)
    , (completenessContract1, completenessContractCompletenessReport1)
    , (completenessContract2, completenessContractCompletenessReport2)
    , (completenessContract3, completenessContractCompletenessReport3)
    , (completenessContract4, completenessContractCompletenessReport4)
    , (completenessContract5, completenessContractCompletenessReport5)
    , (bikeDeliveryOriginal, bikeDeliveryOriginalCompletenessReport)
    , (bikeDeliveryModified, bikeDeliveryModifiedCompletenessReport)
    , (bikeDeliverySanction, bikeDeliverySanctionCompletenessReport)
    , (isdaOriginal, isdaOriginalCompletenessReport)
    , (isdaModified, isdaModifiedCompletenessReport)
    , (guarantor, guarantorCompletenessReport)
    , (employment, employmentCompletenessReport)
    , (tenancy, tenancyCompletenessReport)
    , (serviceLevelAgreement, serviceLevelAgreementCompletenessReport)]

completenessAnalysisTest :: IO ()
completenessAnalysisTest = do
    putStrLn "Running QuickCheck tests for completeness analysis pipeline ..."
    quickCheck $ forAll (elements completenessReportSampleTests) (\(input, expected) -> prop_completenessReport input expected)
    putStrLn "Done."
